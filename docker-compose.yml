version: '3.1'

services:
  order-ms:
    image: docker.io/rcolvara/order-ms-shop-now:1.0
    hostname: order-ms
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: "jdbc:localhost://postgres:5432/postgres?user=postgres&password=postgres"
    network_mode: host
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "1GB"
  user-ms:
    image: docker.io/rcolvara/user-ms-shop-now:1.0
    hostname: user-ms
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: "jdbc:localhost://postgres:5432/postgres?user=postgres&password=postgres"
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "1GB"
  product-ms:
    image: docker.io/rcolvara/product-ms-shop-now:1.0
    hostname: product-ms
    depends_on:
      - postgres
    network_mode: host
    environment:
      SPRING_DATASOURCE_URL: "jdbc:localhost://postgres:5432/postgres?user=postgres&password=postgres"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "1GB"

  postgres:
    image: postgres:latest
    environment:
      PGUSER: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - 5432:5432
    env_file: .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 20
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "1GB"


